ОПРЕДЕЛЕНИЕ последней поездки за день

date - временная переменная, которая будет определять последную поездку за день(начальное значение - Time(StartDate в RichTracks)первой поездки пользователя)


//df_lt - таблица, в которыой будет помещен результат обработки исходной(RichTracks)


ЦИКЛ ПО ВСЕМ ПОЕЗДКАМ ПОЛЬЗОВАТЕЛЯ: //(таблица - df, столбец со временем - Time, счетчик цикла - i)
	IF df.Time[i].year == date.year and df.Time[i].month == date.month and df.Time[i].day == date.day //(.year, .month, .day - аттрибуты, которые по дате получают год, месяц, день соответственно)
		IF df.Time[i].hour > date.hour  //поездка в тот же день, но позже
			date = df.Time[i]	
		ELIF df.Time[i].hour == date.hour and df.Time[i].minute > date.minute:
			date = df.Time[i]
	ELSE
		IF df.Time[i].hour <= 3: //  Учитываем поздние поездки, которые были сделаны до 3 часов ночи
                	df_lt.loc[len(df_lt)] = list(df.loc[i]) // Записываем результат в таблицу(ВСЮ СТРОКУ ИСХОДНОЙ ТАБЛИЦЫ(RichTracks), соответсвующую значению date)
                	date = df.Time[i] // новое значение временной переменной
            	else:
                	if df.Time[i-1].hour >= 12: // Переход ко следующему дню, не учитываем случаи, когда последняя поездка была совершена до 12:00(утром - рано днем)  
                    		df_lt.loc[len(df_lt)] = list(df.loc[i-1]) // записываем результат в таблицу(ВСЮ СТРОКУ ИСХОДНОЙ ТАБЛИЦЫ(RichTracks), соответсвующую значению date)
                	date = df.Time[i] // новое значение временной переменной

	df_lt.loc[len(df_lt)] = list(df.loc[i]) // последнюю поездку надо не забыть добавить


//list(...) превращает в строку таблицы в массив данных (нужно в питоне => если в sql можно обойтись без этого, то необходимости в использовании нет)